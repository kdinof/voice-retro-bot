"""Add todo table

Revision ID: a1b2c3d4e5f6
Revises: 62b45c1baea2
Create Date: 2025-08-22 15:30:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a1b2c3d4e5f6'
down_revision: Union[str, None] = '62b45c1baea2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # First, update the retros table to use text fields instead of JSON
    # (This addresses the schema mismatch between migration and model)
    op.add_column('retros', sa.Column('wins_text', sa.Text(), nullable=True))
    op.add_column('retros', sa.Column('learnings_text', sa.Text(), nullable=True))
    op.add_column('retros', sa.Column('next_actions_text', sa.Text(), nullable=True))
    op.add_column('retros', sa.Column('mits_text', sa.Text(), nullable=True))
    op.add_column('retros', sa.Column('experiment_text', sa.Text(), nullable=True))
    
    # Drop the old JSON columns (if they exist)
    op.drop_column('retros', 'wins')
    op.drop_column('retros', 'learnings')
    op.drop_column('retros', 'next_actions')
    op.drop_column('retros', 'mits')
    op.drop_column('retros', 'experiment')
    
    # Create the todos table
    op.create_table('todos',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('created_from_retro_id', sa.Integer(), nullable=True),
    sa.Column('next_actions_todos', sa.JSON(), nullable=False),
    sa.Column('mits_todos', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['created_from_retro_id'], ['retros.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_todos_date'), 'todos', ['date'], unique=False)
    op.create_index(op.f('ix_todos_user_id'), 'todos', ['user_id'], unique=False)
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop the todos table
    op.drop_index(op.f('ix_todos_user_id'), table_name='todos')
    op.drop_index(op.f('ix_todos_date'), table_name='todos')
    op.drop_table('todos')
    
    # Restore the old JSON columns in retros table
    op.add_column('retros', sa.Column('wins', sa.JSON(), nullable=True))
    op.add_column('retros', sa.Column('learnings', sa.JSON(), nullable=True))
    op.add_column('retros', sa.Column('next_actions', sa.JSON(), nullable=True))
    op.add_column('retros', sa.Column('mits', sa.JSON(), nullable=True))
    op.add_column('retros', sa.Column('experiment', sa.JSON(), nullable=True))
    
    # Drop the text columns
    op.drop_column('retros', 'wins_text')
    op.drop_column('retros', 'learnings_text')
    op.drop_column('retros', 'next_actions_text')
    op.drop_column('retros', 'mits_text')
    op.drop_column('retros', 'experiment_text')
    
    # ### end Alembic commands ###