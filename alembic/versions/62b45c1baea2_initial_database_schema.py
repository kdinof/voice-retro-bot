"""Initial database schema

Revision ID: 62b45c1baea2
Revises: 
Create Date: 2025-07-19 16:42:23.451211

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62b45c1baea2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=32), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('language_code', sa.String(length=10), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('telegram_id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('retros',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('energy_level', sa.Integer(), nullable=True),
    sa.Column('mood', sa.String(length=50), nullable=True),
    sa.Column('mood_explanation', sa.Text(), nullable=True),
    sa.Column('wins', sa.JSON(), nullable=True),
    sa.Column('learnings', sa.JSON(), nullable=True),
    sa.Column('next_actions', sa.JSON(), nullable=True),
    sa.Column('mits', sa.JSON(), nullable=True),
    sa.Column('experiment', sa.JSON(), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_retros_date'), 'retros', ['date'], unique=False)
    op.create_index(op.f('ix_retros_user_id'), 'retros', ['user_id'], unique=False)
    op.create_table('conversation_states',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('current_step', sa.Enum('IDLE', 'ENERGY', 'MOOD', 'MOOD_EXPLANATION', 'WINS', 'LEARNINGS', 'NEXT_ACTIONS', 'MITS', 'EXPERIMENT', 'REVIEW', 'COMPLETED', name='retrostep'), nullable=False),
    sa.Column('current_retro_id', sa.Integer(), nullable=True),
    sa.Column('temp_data', sa.JSON(), nullable=True),
    sa.Column('last_message_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_retro_id'], ['retros.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_conversation_states_user_id'), 'conversation_states', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_conversation_states_user_id'), table_name='conversation_states')
    op.drop_table('conversation_states')
    op.drop_index(op.f('ix_retros_user_id'), table_name='retros')
    op.drop_index(op.f('ix_retros_date'), table_name='retros')
    op.drop_table('retros')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
